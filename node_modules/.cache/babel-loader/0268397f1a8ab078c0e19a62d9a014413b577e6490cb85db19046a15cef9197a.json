{"ast":null,"code":"var _jsxFileName = \"/Users/shichao/Documents/Learn-React/weather/src/components/WeatherDetails.js\",\n  _s = $RefreshSig$();\n/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { format, differenceInSeconds } from \"date-fns\";\nimport \"./LeftSide.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDetails = ({\n  selectedCity,\n  getDayOfWeek,\n  trips,\n  selectedTripIndex\n}) => {\n  _s();\n  const [weatherDetails, setWeatherDetails] = useState(null);\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    if (trips.length > 0) {\n      const selectedTrip = trips[selectedTripIndex];\n      if (selectedTrip) {\n        const startDate = new Date(selectedTrip.date.split(\" - \")[0]);\n        const currentTime = new Date();\n        const timeDifferenceInSeconds = differenceInSeconds(startDate, currentTime);\n        const days = Math.floor(timeDifferenceInSeconds / (60 * 60 * 24));\n        const remainingSeconds = timeDifferenceInSeconds % (60 * 60 * 24);\n        const hours = Math.floor(remainingSeconds / (60 * 60));\n        const remainingMinutes = remainingSeconds % (60 * 60);\n        const minutes = Math.floor(remainingMinutes / 60);\n        const seconds = remainingMinutes % 60;\n        setCountdown({\n          days,\n          hours,\n          minutes,\n          seconds\n        });\n      }\n    }\n  }, [selectedTripIndex]);\n  useEffect(() => {\n    const apiKey = \"45XHHL2JKQC3XPVRRYAVH2AGS\";\n    const apiUrl = \"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/\";\n    const fullUrl = `${apiUrl}${selectedCity}/today?unitGroup=metric&include=days&key=${apiKey}&contentType=json`;\n    const fetchWeatherDetails = async () => {\n      try {\n        var _response$data;\n        const response = await axios.get(fullUrl);\n        setWeatherDetails(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.days[0]) || null);\n      } catch (error) {\n        console.error(\"Error fetching weather details:\", error);\n      }\n    };\n    fetchWeatherDetails();\n  }, [selectedCity, trips]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountdown(prevCountdown => {\n        if (prevCountdown.seconds > 0) {\n          return {\n            ...prevCountdown,\n            seconds: prevCountdown.seconds - 1\n          };\n        } else if (prevCountdown.minutes > 0) {\n          return {\n            ...prevCountdown,\n            minutes: prevCountdown.minutes - 1,\n            seconds: 59\n          };\n        } else if (prevCountdown.hours > 0) {\n          return {\n            ...prevCountdown,\n            hours: prevCountdown.hours - 1,\n            minutes: 59,\n            seconds: 59\n          };\n        } else if (prevCountdown.days > 0) {\n          return {\n            ...prevCountdown,\n            days: prevCountdown.days - 1,\n            hours: 23,\n            minutes: 59,\n            seconds: 59\n          };\n        } else {\n          clearInterval(interval); // Clear the interval when countdown is complete\n          return prevCountdown;\n        }\n      });\n    }, 1000);\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, [countdown]);\n  if (!weatherDetails) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: getDayOfWeek(weatherDetails.datetime)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: process.env.PUBLIC_URL + \"/weather-icons/\" + `${weatherDetails.icon}` + \".png\",\n      alt: weatherDetails.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [weatherDetails.temp, \"\\u02DA\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: selectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [countdown.days, \" days, \", countdown.hours, \" hours, \", countdown.minutes, \" \", \"minutes, \", countdown.seconds, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDetails, \"FnqGc8E9f9C6Nby+s3apny/LUsY=\");\n_c = WeatherDetails;\nexport default WeatherDetails;\nvar _c;\n$RefreshReg$(_c, \"WeatherDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","differenceInSeconds","jsxDEV","_jsxDEV","WeatherDetails","selectedCity","getDayOfWeek","trips","selectedTripIndex","_s","weatherDetails","setWeatherDetails","countdown","setCountdown","days","hours","minutes","seconds","length","selectedTrip","startDate","Date","date","split","currentTime","timeDifferenceInSeconds","Math","floor","remainingSeconds","remainingMinutes","apiKey","apiUrl","fullUrl","fetchWeatherDetails","_response$data","response","get","data","error","console","interval","setInterval","prevCountdown","clearInterval","className","children","datetime","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","icon","alt","temp","_c","$RefreshReg$"],"sources":["/Users/shichao/Documents/Learn-React/weather/src/components/WeatherDetails.js"],"sourcesContent":["/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { format, differenceInSeconds } from \"date-fns\";\nimport \"./LeftSide.css\";\n\n\nconst WeatherDetails = ({\n  selectedCity,\n  getDayOfWeek,\n  trips,\n  selectedTripIndex,\n}) => {\n  const [weatherDetails, setWeatherDetails] = useState(null);\n\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  useEffect(() => {\n    if (trips.length > 0) {\n      const selectedTrip = trips[selectedTripIndex];\n      if (selectedTrip) {\n        const startDate = new Date(selectedTrip.date.split(\" - \")[0]);\n        const currentTime = new Date();\n        const timeDifferenceInSeconds = differenceInSeconds(\n          startDate,\n          currentTime\n        );\n\n        const days = Math.floor(timeDifferenceInSeconds / (60 * 60 * 24));\n        const remainingSeconds = timeDifferenceInSeconds % (60 * 60 * 24);\n        const hours = Math.floor(remainingSeconds / (60 * 60));\n        const remainingMinutes = remainingSeconds % (60 * 60);\n        const minutes = Math.floor(remainingMinutes / 60);\n        const seconds = remainingMinutes % 60;\n\n        setCountdown({ days, hours, minutes, seconds });\n      }\n    }\n  }, [selectedTripIndex]);\n\n  useEffect(() => {\n    const apiKey = \"45XHHL2JKQC3XPVRRYAVH2AGS\";\n    const apiUrl =\n      \"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/\";\n    const fullUrl = `${apiUrl}${selectedCity}/today?unitGroup=metric&include=days&key=${apiKey}&contentType=json`;\n\n    const fetchWeatherDetails = async () => {\n      try {\n        const response = await axios.get(fullUrl);\n        setWeatherDetails(response.data?.days[0] || null);\n      } catch (error) {\n        console.error(\"Error fetching weather details:\", error);\n      }\n    };\n\n    fetchWeatherDetails();\n  }, [selectedCity, trips]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountdown((prevCountdown) => {\n        if (prevCountdown.seconds > 0) {\n          return {\n            ...prevCountdown,\n            seconds: prevCountdown.seconds - 1,\n          };\n        } else if (prevCountdown.minutes > 0) {\n          return {\n            ...prevCountdown,\n            minutes: prevCountdown.minutes - 1,\n            seconds: 59,\n          };\n        } else if (prevCountdown.hours > 0) {\n          return {\n            ...prevCountdown,\n            hours: prevCountdown.hours - 1,\n            minutes: 59,\n            seconds: 59,\n          };\n        } else if (prevCountdown.days > 0) {\n          return {\n            ...prevCountdown,\n            days: prevCountdown.days - 1,\n            hours: 23,\n            minutes: 59,\n            seconds: 59,\n          };\n        } else {\n          clearInterval(interval); // Clear the interval when countdown is complete\n          return prevCountdown;\n        }\n      });\n    }, 1000);\n\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, [countdown]);\n\n  if (!weatherDetails) {\n    return null;\n  }\n  return (\n    <div className='weather-details'>\n      <h3>{getDayOfWeek(weatherDetails.datetime)}</h3>\n      <img\n        src={\n          process.env.PUBLIC_URL +\n          \"/weather-icons/\" +\n          `${weatherDetails.icon}` +\n          \".png\"\n        }\n        alt={weatherDetails.icon}\n      />\n      <h3>{weatherDetails.temp}Ëš</h3>\n      <h3>{selectedCity}</h3>\n      <div className='countdown'>\n        <p>\n          {countdown.days} days, {countdown.hours} hours, {countdown.minutes}{\" \"}\n          minutes, {countdown.seconds} seconds\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}